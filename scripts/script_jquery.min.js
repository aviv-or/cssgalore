$(document).ready(function() {
  function z(a) {
    return (a = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a)) ? {r:parseInt(a[1], 16), g:parseInt(a[2], 16), b:parseInt(a[3], 16)} : null;
  }
  function A() {
    var a = $("#column_gap").val(), b = $("#num_of_columns").val();
    b || (b = 1);
    a || (a = 0);
    $(".multiple_columns_preview").css({"-moz-column-count":b, "-moz-column-gap":a + "px", "-webkit-column-count":b, "-webkit-column-gap":a + "px", "column-count":b, "column-gap":a + "px"});
    a && 0 != a ? b && 1 != b ? $("#generated_code_text").html("<code><span>-moz-column-count:" + b + ";</span></br><span>-moz-column-gap:" + a + "px;</span></br><span>-webkit-column-count:" + b + ";</span></br><span>-webkit-column-gap:" + a + "px;</span></br><span>column-count:" + b + ";</span></br><span>column-gap:" + a + "px;</span></code>") : $("#generated_code_text").html("Number of columns must be specified") : b && 1 != b ? $("#generated_code_text").html("<code><span>-moz-column-count:" + 
    b + ";</span></br><span>-webkit-column-count:" + b + ";</span></br><span>column-count:" + b + ";</span></code>") : $("#generated_code_text").html("There is no generated code");
  }
  function t() {
    var a = $("#text_shadow_hlength").val(), b = $("#text_shadow_vlength").val(), d = $("#text_shadow_blur").val(), c = $("#text_shadow_color").val();
    a && b && d && c ? ($(".text_shadow_preview").css({"text-shadow":a + "px " + b + "px " + d + "px " + c}), $("#generated_code_text").html("<code><span>text-shadow:" + a + "px " + b + "px " + d + "px " + c + ";</span></code>")) : a && b ? ($(".text_shadow_preview").css({"text-shadow":a + "px " + b + "px" + c}), $("#generated_code_text").html("<code><span>text-shadow:" + a + "px " + b + "px " + c + ";</span></code>")) : ($(".text_shadow_preview").css({"text-shadow":"none"}), $("#generated_code_text").html("There is no generated code"));
  }
  function u() {
    var a = $("#outline_thicknes").val(), b = $("#outline_style").val(), d = $("#outline_color").val(), c = $("#outline_offset").val();
    b || (b = "solid");
    c || (c = 0);
    a || (a = 0);
    a && c && b ? ($(".outline_preview").css({outline:a + "px " + b + " " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + a + "px " + b + " " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : a || c || !b ? !a && c && b ? ($(".outline_preview").css({outline:b + " " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + b + " " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : 
    a && !c && b ? ($(".outline_preview").css({outline:a + "px " + b + " " + d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline:" + a + "px " + b + " " + d + ";</span></code>")) : a && c && !b ? ($(".outline_preview").css({outline:a + "px solid " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + a + "px solid " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : !a || c || b ? ($(".outline_preview").css({outline:"none", 
    "outline-offset":0}), $("#generated_code_text").html("There is no generated code")) : ($(".outline_preview").css({outline:a + "px solid" + d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline:" + a + "px solid " + d + ";</span></code>")) : ($(".outline_preview").css({"outline-style":b, "outline-color":d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline-style:" + b + ";</span></br><span>outline-color:" + d + ";</span></code>"));
  }
  function v() {
    var a = $("#top_left_radius").val(), b = $("#top_right_radius").val(), d = $("#bottom_right_radius").val(), c = $("#bottom_left_radius").val();
    a && "" != a || (a = 0);
    b && "" != b || (b = 0);
    d && "" != d || (d = 0);
    c && "" != c || (c = 0);
    $(".border_radius_preview").css({"-webkit-border-radius":a + "px " + b + "px " + d + "px " + c + "px", "border-radius":a + "px " + b + "px " + d + "px " + c + "px"});
    0 == a && 0 == b && 0 == d && 0 == c ? $("#generated_code_text").html("There is no generated code") : a == b && a == d && a == c ? $("#generated_code_text").html("<code><span>-webkit-border-radius:" + a + "px;</span></br><span>border-radius:" + a + "px;</span></code>") : a == d && b == c ? $("#generated_code_text").html("<code><span>-webkit-border-radius:" + a + "px " + b + "px;</span></br><span>border-radius:" + a + "px " + b + "px;</span></code>") : $("#generated_code_text").html("<code><span>-webkit-border-radius:" + 
    a + "px " + b + "px " + d + "px " + c + "px;</span></br><span>border-radius:" + a + "px " + b + "px " + d + "px " + c + "px;</span></code>");
  }
  function q() {
    var a = $("#box_shadow_horizontal_length").val(), b = $("#box_shadow_vertical_length").val(), d = $("#box_shadow_blur_radius").val(), c = $("#box_shadow_spread").val(), e = $("#box_shadow_position").val();
    "outset" == e && (e = "");
    var f = $("#box_shadow_opacity").val();
    1 < f && (f = 1);
    0 > f && (f = 0);
    if ("hex" == $("#box_shadow_color_type").val()) {
      $("#box_shadow_opacity").prop("disabled", !0), f = $("#box_shadow_color").val();
    } else {
      $("#box_shadow_opacity").prop("disabled", !1);
      var l = z($("#box_shadow_color").val()), f = "rgba(" + l.r + "," + l.g + "," + l.b + "," + f + ")";
    }
    a || (a = 0);
    b || (b = 0);
    d || (d = 0);
    c || (c = 0);
    !a && !b || 0 == a && 0 == b ? ($("#generated_code_text").html("There is no generated code"), $(".box_shadow_preview").css({"-moz-box-shadow":"none", "-webkit-box-shadow":"none", "box-shadow":"none"})) : ($("#generated_code_text").html("<code><span>-moz-box-shadow:" + e + " " + a + "px " + b + "px " + d + "px " + c + "px " + f + ";</span></br><span>-webkit-box-shadow:" + e + " " + a + "px " + b + "px " + d + "px " + c + "px " + f + ";</span></br><span>box-shadow:" + e + " " + a + "px " + b + 
    "px " + d + "px " + c + "px " + f + ";</span></code>"), $(".box_shadow_preview").css({"-moz-box-shadow":e + " " + a + "px " + b + "px " + d + "px " + c + "px " + f, "-webkit-box-shadow":e + " " + a + "px " + b + "px " + d + "px " + c + "px " + f, "box-shadow":e + " " + a + "px " + b + "px " + d + "px " + c + "px " + f}));
  }
  function n() {
    var a = $("#transform_scale_x").val(), b = $("#transform_scale_y").val(), d = $("#transform_translate_x").val(), c = $("#transform_translate_y").val(), e = $("#transform_skew_x").val(), f = $("#transform_skew_y").val(), l = $("#transform_rotate").val();
    a || (a = 1);
    b || (b = 1);
    d || (d = 0);
    c || (c = 0);
    e || (e = 0);
    f || (f = 0);
    l || (l = 0);
    var g = "scaleX(" + a + ") scaleY(" + b + ") rotate(" + l + "deg) translateX(" + d + "px) translateY(" + c + "px) skewX(" + e + "deg) skewY(" + f + "deg)";
    $(".transform_preview").css({"-moz-transform":g, "-webkit-transform":g, transform:g});
    !(a || b || d || c || e || f || l) || 1 == a && 1 == b && 0 == d && 0 == c && 0 == e && 0 == f && 0 == l ? $("#generated_code_text").html("There is no generated code") : (a && 1 != a || (g = g.replace(/scaleX\([a-zA-Z0-9\.]+\)/g, "")), b && 1 != b || (g = g.replace(/scaleY\([a-zA-Z0-9\.]+\)/g, "")), d && 0 != d || (g = g.replace(/translateX\([a-zA-Z0-9\.]+\)/g, "")), c && 0 != c || (g = g.replace(/translateY\([a-zA-Z0-9\.]+\)/g, "")), e && 0 != e || (g = g.replace(/skewX\([a-zA-Z0-9\.]+\)/g, 
    "")), f && 0 != f || (g = g.replace(/skewY\([a-zA-Z0-9\.]+\)/g, "")), l && 0 != l || (g = g.replace(/rotate\([a-zA-Z0-9\.]+\)/g, "")), $("#generated_code_text").html("<code><span>-moz-transform:" + g + ";</span></br><span>-webkit-transform:" + g + ";</span></br><span>transform:" + g + ";</span></code>"), $(".transform_preview").css({"-moz-transform":g, "-webkit-transform":g, transform:g}));
  }
  function k() {
    var a = $("#transition_opacity_timing").val(), b = $("#transition_opacity_opacity").val(), d = $("#transition_opacity_duration").val(), c = $("#transition_opacity_delay").val(), e = $("#transition_height_timing").val(), f = $("#transition_height_height").val(), l = $("#transition_height_duration").val(), g = $("#transition_height_delay").val(), k = $("#transition_width_timing").val(), h = $("#transition_width_width").val(), m = $("#transition_width_duration").val(), q = $("#transition_width_delay").val(), 
    p = $("#transition_bgcolor_timing").val(), r = $("#transition_bgcolor_color").val(), n = $("#transition_bgcolor_duration").val(), t = $("#transition_bgcolor_delay").val();
    d || (d = 0);
    c || (c = 0);
    b && 1 != b || (b = !1);
    1 < b && (b = 1);
    0 > b && (b = 0);
    l || (l = 0);
    g || (g = 0);
    f && "" !== f || (f = !1);
    m || (m = 0);
    q || (q = 0);
    h && "" !== h || (h = !1);
    n || (n = 0);
    t || (t = 0);
    f ? (l = "height " + l + "s " + e + " " + g + "s", e = "height: " + f + "px;") : e = l = "";
    h ? (m = "width " + m + "s " + k + " " + q + "s", k = "width: " + h + "px;") : k = m = "";
    b ? (d = "opacity " + d + "s " + a + " " + c + "s", a = "opacity: " + b + ";") : a = d = "";
    y ? (p = "background-color " + n + "s " + p + " " + t + "s", r = "background-color: " + r + ";") : r = p = "";
    p = (l + ", " + m + ", " + d + ", " + p).replace(/^([\,\s]+)|(\s\,\W)|([\,\s]+)$/g, " ");
    r = e + k + a + r;
    n = ".transition_preview{ -moz-transition:" + p + ";-webkit-transition:" + p + ";o-transition:" + p + ";transition:" + p + ";} .transition_preview:hover{ " + r + " }";
    r = r.replace(/\;(?=[^;]*\;)/g, ";</br>");
    w.childNodes[0] ? w.childNodes[0].nodeValue = n : w.appendChild(document.createTextNode(n));
    f || h || b || y ? $("#generated_code_text").html("<code>.selector{</br><span>-moz-transition:" + p + ";</span></br><span>-webkit-transition:" + p + ";</span></br><span>-o-transition:" + p + ";</span></br><span>transition:" + p + ";</span></br>}</code></br><code>.selector:hover{</br><span>" + r + "</span></br>}</code>") : $("#generated_code_text").html("There is no generated code");
  }
  function m() {
    var a = $("#gradient_start_color_linear").val(), b = $("#gradient_end_color_linear").val(), d = $("#gradient_angle").val(), c = $("#gradient_start_color_radial").val(), e = $("#gradient_start_size").val(), f = $("#gradient_end_color_radial").val(), h = $("#gradient_end_size").val();
    switch($("#gradient_style").val()) {
      case "linear":
        b = d + "deg ," + a + ", " + b;
        $(".gradient_preview").css({background:"linear-gradient(" + b + ")"});
        $("#generated_code_text").html("<code>background: " + a + ";</span></br><span>background: -webkit-linear-gradient(" + b + ");</span></br><span>background: -moz-linear-gradient(" + b + ");</span></br><span>background: -o-linear-gradient(" + b + ");</span></br><span>background: linear-gradient(" + b + ");</span></code>");
        break;
      case "radial":
        b = c + " " + e + "%, " + f + " " + h + "%";
        $(".gradient_preview").css({background:"radial-gradient(" + b + ")"});
        $("#generated_code_text").html("<code>background: " + c + ";</span></br><span>background: -webkit-radial-gradient(" + b + ");</span></br><span>background: -moz-radial-gradient(" + b + ");</span></br><span>background: -o-radial-gradient(" + b + ");</span></br><span>background: radial-gradient(" + b + ");</span></code>");
        break;
      default:
        $("#generated_code_text").html("There is no generated code");
    }
  }
  function x(a, b) {
    return Math.floor(Math.random() * (b - a + 1) + a);
  }
  function D(a) {
    a && "" != a ? $.ajax({type:"POST", url:base_url + "getminifiedcss", data:{css:a}, dataType:"text", success:function(a) {
      $("#output_css").val(a).focus().select();
      $("#btn_copy_minify").removeClass("disabled");
      $("#btn_download_minify").removeClass("disabled");
    }}) : $("#output_css").val("You have to insert your CSS first.").focus().select();
  }
  function h() {
    var a = $("#filter_function").val();
    "drop-shadow" != a ? (filter_val = $("#filter_" + a + "_value").val(), B(filter_val, a)) : ((dsh = $("#filter_" + a + "_h").val()) || (dsh = 0), (dsv = $("#filter_" + a + "_v").val()) || (dsv = 0), (dsb = $("#filter_" + a + "_blur").val()) || (dsb = 0), dsc = $("#filter_" + a + "_color").val(), B(null, a, dsh, dsv, dsb, dsc));
  }
  function B(a, b, d, c, e, f) {
    a = void 0 === a ? "" : a;
    d = void 0 === d ? 0 : d;
    c = void 0 === c ? 0 : c;
    e = void 0 === e ? 0 : e;
    f = void 0 === f ? "#000" : f;
    switch(b) {
      case "hue-rotate":
        csscode = b + "(" + a + "deg)";
        break;
      case "blur":
        csscode = b + "(" + a + "px)";
        break;
      case "grayscale":
      case "invert":
      case "opacity":
      case "saturate":
      case "sepia":
      case "contrast":
      case "brightness":
        csscode = b + "(" + a + "%)";
        break;
      case "drop-shadow":
        csscode = b + "(" + d + "px " + c + "px " + e + "px " + f + ")";
    }
    "" == a && "drop-shadow" != b ? ($(".filter_preview").css({"-webkit-filter":"", filter:""}), $("#generated_code_text").html("There is no generated code")) : 0 == d && 0 == c && 0 == e && "drop-shadow" == b ? ($(".filter_preview").css({"-webkit-filter":"", filter:""}), $("#generated_code_text").html("There is no generated code")) : ($(".filter_preview").css({"-webkit-filter":csscode, filter:csscode}), $("#generated_code_text").html("<code><span>-webkit-filter:" + csscode + ";</span></br><span>filter:" + 
    csscode + ";</span></br>"));
  }
  $(".button-collapse").sideNav();
  var C = new Clipboard(".copybtn");
  C.on("success", function(a) {
    Materialize.toast("Copied to clipboard", 4000);
  });
  C.on("error", function(a) {
    Materialize.toast("Press CTRL+C!", 4000);
  });
  $(".modal").modal();
  $("select").material_select();
  $(".collapsible").collapsible();
  section && $('li[data-nav_page="' + section + '"]').addClass("active");
  "undefined" !== typeof presection && presection && $('li[data-nav_section="' + presection + '"]').addClass("active");
  $(":input[type=number]").on("mousewheel", function(a) {
    a.preventDefault();
  });
  $(document).on("click", ".contact_button", function() {
    var a = $("input[name='contact_name']").val(), b = $("input[name='contact_lastname']").val(), d = $("input[name='contact_mail']").val(), c = $("textarea[name='contact_message']").val();
    $.ajax({type:"POST", url:base_url + "contact/send", data:{contact_name:a, contact_lastname:b, contact_mail:d, contact_message:c}, dataType:"text", success:function(a) {
      Materialize.toast(a, 4000);
    }});
  });
  var w = document.createElement("style");
  document.getElementsByTagName("head")[0].appendChild(w);
  $("[id^=transition_field_]").hide();
  $("#transition_field_" + $("#transition_transition_property").val()).show();
  $("[id^=field_filter_]").hide();
  $("#field_filter_" + $("#filter_function").val()).show();
  $("[id^=gradient_field_]").hide();
  $("#gradient_field_" + $("#gradient_style").val()).show();
  $(document).on("click", "#saveasgist", function(a) {
    a.preventDefault();
    a = $("#generated_code_text").html();
    a = a.replace(/(\<code\>)|(\<\/code\>)|(\<span\>)|(\<\/span\>)/g, "");
    a = a.replace(/(\<br\>)|(\<\/br\>)/g, "\n");
    $.ajax({url:"https://api.github.com/gists", type:"POST", dataType:"json", async:!1, data:JSON.stringify({description:"CSS Galore - Generated " + section + " CSS Code", "public":!0, files:{"cssgalore.css":{content:a}}}), success:function(a) {
      var b = window.open("", "_blank");
      b.location = a.html_url;
      b.focus();
    }, fail:function(a) {
      Materialize.toast("An error occured, try again! Error: " + a, 4000);
    }});
  });
  $(document).on("keyup", "#num_of_columns", function() {
    A();
  });
  $(document).on("keyup", "#column_gap", function() {
    A();
  });
  $(document).on("keyup", "#text_shadow_hlength", function() {
    t();
  });
  $(document).on("keyup", "#text_shadow_vlength", function() {
    t();
  });
  $(document).on("keyup", "#text_shadow_blur", function() {
    t();
  });
  $(document).on("change", "#text_shadow_color", function() {
    t();
  });
  $(document).on("keyup", "#outline_thicknes", function() {
    u();
  });
  $(document).on("change", "#outline_style", function() {
    u();
  });
  $(document).on("change", "#outline_color", function() {
    u();
  });
  $(document).on("keyup", "#outline_offset", function() {
    u();
  });
  $(document).on("keyup", "#top_left_radius", function() {
    v();
  });
  $(document).on("keyup", "#top_right_radius", function() {
    v();
  });
  $(document).on("keyup", "#bottom_right_radius", function() {
    v();
  });
  $(document).on("keyup", "#bottom_left_radius", function() {
    v();
  });
  $(document).on("keyup", "#box_shadow_horizontal_length", function() {
    q();
  });
  $(document).on("keyup", "#box_shadow_vertical_length", function() {
    q();
  });
  $(document).on("keyup", "#box_shadow_blur_radius", function() {
    q();
  });
  $(document).on("keyup", "#box_shadow_spread", function() {
    q();
  });
  $(document).on("change", "#box_shadow_position", function() {
    q();
  });
  $(document).on("change", "#box_shadow_color_type", function() {
    q();
  });
  $(document).on("change", "#box_shadow_color", function() {
    q();
  });
  $(document).on("keyup", "#box_shadow_opacity", function() {
    q();
  });
  $(document).on("keyup", "#transform_scale_x", function() {
    n();
  });
  $(document).on("keyup", "#transform_scale_y", function() {
    n();
  });
  $(document).on("keyup", "#transform_translate_x", function() {
    n();
  });
  $(document).on("keyup", "#transform_translate_y", function() {
    n();
  });
  $(document).on("keyup", "#transform_skew_x", function() {
    n();
  });
  $(document).on("keyup", "#transform_skew_y", function() {
    n();
  });
  $(document).on("keyup", "#transform_rotate", function() {
    n();
  });
  $(document).on("change", "#transition_transition_property", function() {
    $("[id^=transition_field_]").hide();
    $("#transition_field_" + $(this).val()).show();
  });
  var y = !1;
  $(document).on("change", "#transition_height_timing", function() {
    k();
  });
  $(document).on("keyup", "#transition_height_height", function() {
    k();
  });
  $(document).on("keyup", "#transition_height_duration", function() {
    k();
  });
  $(document).on("keyup", "#transition_height_delay", function() {
    k();
  });
  $(document).on("change", "#transition_width_timing", function() {
    k();
  });
  $(document).on("keyup", "#transition_width_width", function() {
    k();
  });
  $(document).on("keyup", "#transition_width_duration", function() {
    k();
  });
  $(document).on("keyup", "#transition_width_delay", function() {
    k();
  });
  $(document).on("change", "#transition_bgcolor_timing", function() {
    k();
  });
  $(document).on("change", "#transition_bgcolor_color", function() {
    y = !0;
    k();
  });
  $(document).on("keyup", "#transition_bgcolor_duration", function() {
    k();
  });
  $(document).on("keyup", "#transition_bgcolor_delay", function() {
    k();
  });
  $(document).on("change", "#transition_opacity_timing", function() {
    k();
  });
  $(document).on("keyup", "#transition_opacity_opacity", function() {
    k();
  });
  $(document).on("keyup", "#transition_opacity_duration", function() {
    k();
  });
  $(document).on("keyup", "#transition_opacity_delay", function() {
    k();
  });
  $(document).on("change", "#gradient_style", function() {
    $("[id^=gradient_field_]").hide();
    $("#gradient_field_" + $(this).val()).show();
    m();
  });
  "gradient" === section && m();
  $(document).on("change", "#gradient_start_color_linear", function() {
    m();
  });
  $(document).on("change", "#gradient_end_color_linear", function() {
    m();
  });
  $(document).on("mousemove change", "#gradient_angle", function() {
    m();
  });
  $(document).on("change", "#gradient_start_color_radial", function() {
    m();
  });
  $(document).on("change", "#gradient_end_color_radial", function() {
    m();
  });
  $(document).on("mousemove change", "#gradient_start_size", function() {
    m();
  });
  $(document).on("mousemove change", "#gradient_end_size", function() {
    m();
  });
  "gradient collection" === section && ($(".gradient_card").each(function() {
    var a = $(this).attr("data-s-color");
    rgbcolor = z(a);
    rgb = [rgbcolor.r, rgbcolor.g, rgbcolor.b];
    1 === (125 < Math.round((299 * parseInt(rgb[0]) + 587 * parseInt(rgb[1]) + 114 * parseInt(rgb[2])) / 1000) ? 1 : 0) ? (console.log("black"), $(this).css({color:"rgba(0,0,0,0.87)"})) : (console.log("white"), $(this).css({color:"white"}));
    $(this).css({"background-color":$(this).attr("data-s-color"), background:"linear-gradient(to left, " + $(this).attr("data-s-color") + ", " + $(this).attr("data-e-color") + ")"});
  }), $(document).on("click", ".generate_button_gradient", function() {
    var a = $(this).parents(".gradient_card").attr("data-s-color"), b = $(this).parents(".gradient_card").attr("data-e-color");
    $("#generated_code_text").html("<code>background: " + a + ";</span></br><span>background: -webkit-linear-gradient(to left, " + a + ", " + b + ");</span></br><span>background: -moz-linear-gradient(to left, " + a + ", " + b + ");</span></br><span>background: -o-linear-gradient(to left, " + a + ", " + b + ");</span></br><span>background: linear-gradient(to left, " + a + ", " + b + ");</span></code>");
  }));
  $(document).on("click", "#gen_loremipsum", function() {
    var a = $("#num_of_paragraphs").val(), b = $("#len_of_paragraphs").val();
    $.ajax({type:"POST", url:base_url + "getwords", dataType:"json", success:function(d) {
      i = 0;
      for (output = "";i < a;) {
        var c = output, e = b, f = d;
        minlen = 50 == e ? 10 : e - 50;
        numwords = x(minlen, e);
        allwords = f.length - 1;
        paragraph = "";
        numsent = x(3, 7);
        for (j = 0;j < numsent;) {
          numwordssen = x(Math.floor(minlen / 3), Math.floor(numwords / 3));
          sentence = "";
          for (e = 0;e < numwordssen;e++) {
            sentence += f[x(0, allwords)].word + " ";
          }
          e = sentence;
          sentence = (e.charAt(0).toUpperCase() + e.slice(1)).trim() + ". ";
          paragraph += sentence;
          j++;
        }
        output = c + (paragraph + "\n\r");
        i++;
        console.log(output);
      }
      $("#output_loremipsum").val(output).focus();
    }});
  });
  $(document).on("focus", "#pixel_size", function() {
    $("#em_size").val("");
  });
  $(document).on("focus", "#em_size", function() {
    $("#pixel_size").val("");
  });
  $(document).on("click", "#conv_pxem", function() {
    base = $("#base_size").val();
    px = $("#pixel_size").val();
    em = $("#em_size").val();
    base && "" != base ? (em && "" != em || ($("#em_size").val((px / base).toFixed(2)), $("#em_size").focus()), px && "" != px || ($("#pixel_size").val((em * base).toFixed(2)), $("#pixel_size").focus())) : $("#base_size").focus();
  });
  $(document).on("click", "#input_css_btn", function() {
    $css = $("#input_css").val();
    D($css);
  });
  $(document).on("click", "#btn_download_minify", function(a) {
    a.preventDefault();
    form = $("#minify_form");
    form.submit();
  });
  $(document).on("change", "#filter_function", function() {
    $("[id^=field_filter_]").hide();
    $("#field_filter_" + $(this).val()).show();
    h();
  });
  $(document).on("click", "#submit_url_filter", function() {
    var a = $("#img_url_ta").val(), a = a.replace(/(^\w+:|^)\/\//, ""), a = "http://" + a, b = RegExp("^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", 
    "i");
    2083 > a.length && b.test(a) ? ($("#img_url_ta").addClass("valid"), $("#filter_preview_img").attr("src", a), h()) : $("#img_url_ta").addClass("invalid");
  });
  $(document).on("keyup", "#filter_blur_value", function() {
    h();
  });
  $(document).on("keyup", "#filter_brightness_value", function() {
    h();
  });
  $(document).on("keyup", "#filter_contrast_value", function() {
    h();
  });
  $(document).on("mousemove change", "#filter_grayscale_value", function() {
    h();
  });
  $(document).on("mousemove change", "#filter_hue-rotate_value", function() {
    h();
  });
  $(document).on("mousemove change", "#filter_invert_value", function() {
    h();
  });
  $(document).on("mousemove change", "#filter_opacity_value", function() {
    h();
  });
  $(document).on("keyup", "#filter_saturate_value", function() {
    h();
  });
  $(document).on("mousemove change", "#filter_sepia_value", function() {
    h();
  });
  $(document).on("keyup", "#filter_drop-shadow_h", function() {
    h();
  });
  $(document).on("keyup", "#filter_drop-shadow_v", function() {
    h();
  });
  $(document).on("keyup", "#filter_drop-shadow_blur", function() {
    h();
  });
  $(document).on("change", "#filter_drop-shadow_color", function() {
    h();
  });
});