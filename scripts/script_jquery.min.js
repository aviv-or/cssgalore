$(document).ready(function() {
  function z(b) {
    return (b = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(b)) ? {r:parseInt(b[1], 16), g:parseInt(b[2], 16), b:parseInt(b[3], 16)} : null;
  }
  function A() {
    var b = $("#column_gap").val(), a = $("#num_of_columns").val();
    a || (a = 1);
    b || (b = 0);
    $(".multiple_columns_preview").css({"-moz-column-count":a, "-moz-column-gap":b + "px", "-webkit-column-count":a, "-webkit-column-gap":b + "px", "column-count":a, "column-gap":b + "px"});
    b && 0 != b ? a && 1 != a ? $("#generated_code_text").html("<code><span>-moz-column-count:" + a + ";</span></br><span>-moz-column-gap:" + b + "px;</span></br><span>-webkit-column-count:" + a + ";</span></br><span>-webkit-column-gap:" + b + "px;</span></br><span>column-count:" + a + ";</span></br><span>column-gap:" + b + "px;</span></code>") : $("#generated_code_text").html("Number of columns must be specified") : a && 1 != a ? $("#generated_code_text").html("<code><span>-moz-column-count:" + 
    a + ";</span></br><span>-webkit-column-count:" + a + ";</span></br><span>column-count:" + a + ";</span></code>") : $("#generated_code_text").html("There is no generated code");
  }
  function r() {
    var b = $("#text_shadow_hlength").val(), a = $("#text_shadow_vlength").val(), d = $("#text_shadow_blur").val(), c = $("#text_shadow_color").val();
    b && a && d && c ? ($(".text_shadow_preview").css({"text-shadow":b + "px " + a + "px " + d + "px " + c}), $("#generated_code_text").html("<code><span>text-shadow:" + b + "px " + a + "px " + d + "px " + c + ";</span></code>")) : b && a ? ($(".text_shadow_preview").css({"text-shadow":b + "px " + a + "px" + c}), $("#generated_code_text").html("<code><span>text-shadow:" + b + "px " + a + "px " + c + ";</span></code>")) : ($(".text_shadow_preview").css({"text-shadow":"none"}), $("#generated_code_text").html("There is no generated code"));
  }
  function u() {
    var b = $("#outline_thicknes").val(), a = $("#outline_style").val(), d = $("#outline_color").val(), c = $("#outline_offset").val();
    a || (a = "solid");
    c || (c = 0);
    b || (b = 0);
    b && c && a ? ($(".outline_preview").css({outline:b + "px " + a + " " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + b + "px " + a + " " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : b || c || !a ? !b && c && a ? ($(".outline_preview").css({outline:a + " " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + a + " " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : 
    b && !c && a ? ($(".outline_preview").css({outline:b + "px " + a + " " + d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline:" + b + "px " + a + " " + d + ";</span></code>")) : b && c && !a ? ($(".outline_preview").css({outline:b + "px solid " + d, "outline-offset":c + "px"}), $("#generated_code_text").html("<code><span>outline:" + b + "px solid " + d + ";</span></br><span>outline-offset:" + c + "px;</span></code>")) : !b || c || a ? ($(".outline_preview").css({outline:"none", 
    "outline-offset":0}), $("#generated_code_text").html("There is no generated code")) : ($(".outline_preview").css({outline:b + "px solid" + d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline:" + b + "px solid " + d + ";</span></code>")) : ($(".outline_preview").css({"outline-style":a, "outline-color":d, "outline-offset":0}), $("#generated_code_text").html("<code><span>outline-style:" + a + ";</span></br><span>outline-color:" + d + ";</span></code>"));
  }
  function v() {
    var b = $("#top_left_radius").val(), a = $("#top_right_radius").val(), d = $("#bottom_right_radius").val(), c = $("#bottom_left_radius").val();
    b && "" != b || (b = 0);
    a && "" != a || (a = 0);
    d && "" != d || (d = 0);
    c && "" != c || (c = 0);
    $(".border_radius_preview").css({"-webkit-border-radius":b + "px " + a + "px " + d + "px " + c + "px", "border-radius":b + "px " + a + "px " + d + "px " + c + "px"});
    0 == b && 0 == a && 0 == d && 0 == c ? $("#generated_code_text").html("There is no generated code") : b == a && b == d && b == c ? $("#generated_code_text").html("<code><span>-webkit-border-radius:" + b + "px;</span></br><span>border-radius:" + b + "px;</span></code>") : b == d && a == c ? $("#generated_code_text").html("<code><span>-webkit-border-radius:" + b + "px " + a + "px;</span></br><span>border-radius:" + b + "px " + a + "px;</span></code>") : $("#generated_code_text").html("<code><span>-webkit-border-radius:" + 
    b + "px " + a + "px " + d + "px " + c + "px;</span></br><span>border-radius:" + b + "px " + a + "px " + d + "px " + c + "px;</span></code>");
  }
  function m() {
    var b = $("#box_shadow_horizontal_length").val(), a = $("#box_shadow_vertical_length").val(), d = $("#box_shadow_blur_radius").val(), c = $("#box_shadow_spread").val(), e = $("#box_shadow_position").val();
    "outset" == e && (e = "");
    var f = $("#box_shadow_opacity").val();
    1 < f && (f = 1);
    0 > f && (f = 0);
    if ("hex" == $("#box_shadow_color_type").val()) {
      $("#box_shadow_opacity").prop("disabled", !0), f = $("#box_shadow_color").val();
    } else {
      $("#box_shadow_opacity").prop("disabled", !1);
      var k = z($("#box_shadow_color").val()), f = "rgba(" + k.r + "," + k.g + "," + k.b + "," + f + ")";
    }
    b || (b = 0);
    a || (a = 0);
    d || (d = 0);
    c || (c = 0);
    !b && !a || 0 == b && 0 == a ? ($("#generated_code_text").html("There is no generated code"), $(".box_shadow_preview").css({"-moz-box-shadow":"none", "-webkit-box-shadow":"none", "box-shadow":"none"})) : ($("#generated_code_text").html("<code><span>-moz-box-shadow:" + e + " " + b + "px " + a + "px " + d + "px " + c + "px " + f + ";</span></br><span>-webkit-box-shadow:" + e + " " + b + "px " + a + "px " + d + "px " + c + "px " + f + ";</span></br><span>box-shadow:" + e + " " + b + "px " + a + 
    "px " + d + "px " + c + "px " + f + ";</span></code>"), $(".box_shadow_preview").css({"-moz-box-shadow":e + " " + b + "px " + a + "px " + d + "px " + c + "px " + f, "-webkit-box-shadow":e + " " + b + "px " + a + "px " + d + "px " + c + "px " + f, "box-shadow":e + " " + b + "px " + a + "px " + d + "px " + c + "px " + f}));
  }
  function p() {
    var b = $("#transform_scale_x").val(), a = $("#transform_scale_y").val(), d = $("#transform_translate_x").val(), c = $("#transform_translate_y").val(), e = $("#transform_skew_x").val(), f = $("#transform_skew_y").val(), k = $("#transform_rotate").val();
    b || (b = 1);
    a || (a = 1);
    d || (d = 0);
    c || (c = 0);
    e || (e = 0);
    f || (f = 0);
    k || (k = 0);
    var g = "scaleX(" + b + ") scaleY(" + a + ") rotate(" + k + "deg) translateX(" + d + "px) translateY(" + c + "px) skewX(" + e + "deg) skewY(" + f + "deg)";
    $(".transform_preview").css({"-moz-transform":g, "-webkit-transform":g, transform:g});
    !(b || a || d || c || e || f || k) || 1 == b && 1 == a && 0 == d && 0 == c && 0 == e && 0 == f && 0 == k ? $("#generated_code_text").html("There is no generated code") : (b && 1 != b || (g = g.replace(/scaleX\([a-zA-Z0-9\.]+\)/g, "")), a && 1 != a || (g = g.replace(/scaleY\([a-zA-Z0-9\.]+\)/g, "")), d && 0 != d || (g = g.replace(/translateX\([a-zA-Z0-9\.]+\)/g, "")), c && 0 != c || (g = g.replace(/translateY\([a-zA-Z0-9\.]+\)/g, "")), e && 0 != e || (g = g.replace(/skewX\([a-zA-Z0-9\.]+\)/g, 
    "")), f && 0 != f || (g = g.replace(/skewY\([a-zA-Z0-9\.]+\)/g, "")), k && 0 != k || (g = g.replace(/rotate\([a-zA-Z0-9\.]+\)/g, "")), $("#generated_code_text").html("<code><span>-moz-transform:" + g + ";</span></br><span>-webkit-transform:" + g + ";</span></br><span>transform:" + g + ";</span></code>"), $(".transform_preview").css({"-moz-transform":g, "-webkit-transform":g, transform:g}));
  }
  function h() {
    var b = $("#transition_opacity_timing").val(), a = $("#transition_opacity_opacity").val(), d = $("#transition_opacity_duration").val(), c = $("#transition_opacity_delay").val(), e = $("#transition_height_timing").val(), f = $("#transition_height_height").val(), k = $("#transition_height_duration").val(), g = $("#transition_height_delay").val(), h = $("#transition_width_timing").val(), l = $("#transition_width_width").val(), m = $("#transition_width_duration").val(), p = $("#transition_width_delay").val(), 
    n = $("#transition_bgcolor_timing").val(), q = $("#transition_bgcolor_color").val(), t = $("#transition_bgcolor_duration").val(), r = $("#transition_bgcolor_delay").val();
    d || (d = 0);
    c || (c = 0);
    a && 1 != a || (a = !1);
    1 < a && (a = 1);
    0 > a && (a = 0);
    k || (k = 0);
    g || (g = 0);
    f && "" !== f || (f = !1);
    m || (m = 0);
    p || (p = 0);
    l && "" !== l || (l = !1);
    t || (t = 0);
    r || (r = 0);
    f ? (k = "height " + k + "s " + e + " " + g + "s", e = "height: " + f + "px;") : e = k = "";
    l ? (m = "width " + m + "s " + h + " " + p + "s", h = "width: " + l + "px;") : h = m = "";
    a ? (d = "opacity " + d + "s " + b + " " + c + "s", b = "opacity: " + a + ";") : b = d = "";
    y ? (n = "background-color " + t + "s " + n + " " + r + "s", q = "background-color: " + q + ";") : q = n = "";
    n = (k + ", " + m + ", " + d + ", " + n).replace(/^([\,\s]+)|(\s\,\W)|([\,\s]+)$/g, " ");
    q = e + h + b + q;
    t = ".transition_preview{ -moz-transition:" + n + ";-webkit-transition:" + n + ";o-transition:" + n + ";transition:" + n + ";} .transition_preview:hover{ " + q + " }";
    q = q.replace(/\;(?=[^;]*\;)/g, ";</br>");
    w.childNodes[0] ? w.childNodes[0].nodeValue = t : w.appendChild(document.createTextNode(t));
    f || l || a || y ? $("#generated_code_text").html("<code>.selector{</br><span>-moz-transition:" + n + ";</span></br><span>-webkit-transition:" + n + ";</span></br><span>-o-transition:" + n + ";</span></br><span>transition:" + n + ";</span></br>}</code></br><code>.selector:hover{</br><span>" + q + "</span></br>}</code>") : $("#generated_code_text").html("There is no generated code");
  }
  function l() {
    var b = $("#gradient_start_color_linear").val(), a = $("#gradient_end_color_linear").val(), d = $("#gradient_angle").val(), c = $("#gradient_start_color_radial").val(), e = $("#gradient_start_size").val(), f = $("#gradient_end_color_radial").val(), h = $("#gradient_end_size").val();
    switch($("#gradient_style").val()) {
      case "linear":
        a = d + "deg ," + b + ", " + a;
        $(".gradient_preview").css({background:"linear-gradient(" + a + ")"});
        $("#generated_code_text").html("<code>background: " + b + ";</span></br><span>background: -webkit-linear-gradient(" + a + ");</span></br><span>background: -moz-linear-gradient(" + a + ");</span></br><span>background: -o-linear-gradient(" + a + ");</span></br><span>background: linear-gradient(" + a + ");</span></code>");
        break;
      case "radial":
        a = c + " " + e + "%, " + f + " " + h + "%";
        $(".gradient_preview").css({background:"radial-gradient(" + a + ")"});
        $("#generated_code_text").html("<code>background: " + c + ";</span></br><span>background: -webkit-radial-gradient(" + a + ");</span></br><span>background: -moz-radial-gradient(" + a + ");</span></br><span>background: -o-radial-gradient(" + a + ");</span></br><span>background: radial-gradient(" + a + ");</span></code>");
        break;
      default:
        $("#generated_code_text").html("There is no generated code");
    }
  }
  function x(b, a) {
    return Math.floor(Math.random() * (a - b + 1) + b);
  }
  $(".button-collapse").sideNav();
  var B = new Clipboard(".copybtn");
  B.on("success", function(b) {
    Materialize.toast("Copied to clipboard", 4000);
  });
  B.on("error", function(b) {
    Materialize.toast("Press CTRL+C!", 4000);
  });
  $(".modal").modal();
  $("select").material_select();
  $(".collapsible").collapsible();
  section && $('li[data-nav_page="' + section + '"]').addClass("active");
  "undefined" !== typeof presection && presection && $('li[data-nav_section="' + presection + '"]').addClass("active");
  $(":input[type=number]").on("mousewheel", function(b) {
    b.preventDefault();
  });
  $(document).on("click", ".contact_button", function() {
    var b = $("input[name='contact_name']").val(), a = $("input[name='contact_lastname']").val(), d = $("input[name='contact_mail']").val(), c = $("textarea[name='contact_message']").val();
    $.ajax({type:"POST", url:base_url + "contact/send", data:{contact_name:b, contact_lastname:a, contact_mail:d, contact_message:c}, dataType:"text", success:function(a) {
      Materialize.toast(a, 4000);
    }});
  });
  var w = document.createElement("style");
  document.getElementsByTagName("head")[0].appendChild(w);
  $("#transition_field_height, #transition_field_width, #transition_field_bgcolor, #transition_field_opacity").hide();
  $("#gradient_field_linear, #gradient_field_radial").hide();
  $(document).on("keyup", "#num_of_columns", function() {
    A();
  });
  $(document).on("keyup", "#column_gap", function() {
    A();
  });
  $(document).on("keyup", "#text_shadow_hlength", function() {
    r();
  });
  $(document).on("keyup", "#text_shadow_vlength", function() {
    r();
  });
  $(document).on("keyup", "#text_shadow_blur", function() {
    r();
  });
  $(document).on("change", "#text_shadow_color", function() {
    r();
  });
  $(document).on("keyup", "#outline_thicknes", function() {
    u();
  });
  $(document).on("change", "#outline_style", function() {
    u();
  });
  $(document).on("change", "#outline_color", function() {
    u();
  });
  $(document).on("keyup", "#outline_offset", function() {
    u();
  });
  $(document).on("keyup", "#top_left_radius", function() {
    v();
  });
  $(document).on("keyup", "#top_right_radius", function() {
    v();
  });
  $(document).on("keyup", "#bottom_right_radius", function() {
    v();
  });
  $(document).on("keyup", "#bottom_left_radius", function() {
    v();
  });
  $(document).on("keyup", "#box_shadow_horizontal_length", function() {
    m();
  });
  $(document).on("keyup", "#box_shadow_vertical_length", function() {
    m();
  });
  $(document).on("keyup", "#box_shadow_blur_radius", function() {
    m();
  });
  $(document).on("keyup", "#box_shadow_spread", function() {
    m();
  });
  $(document).on("change", "#box_shadow_position", function() {
    m();
  });
  $(document).on("change", "#box_shadow_color_type", function() {
    m();
  });
  $(document).on("change", "#box_shadow_color", function() {
    m();
  });
  $(document).on("keyup", "#box_shadow_opacity", function() {
    m();
  });
  $(document).on("keyup", "#transform_scale_x", function() {
    p();
  });
  $(document).on("keyup", "#transform_scale_y", function() {
    p();
  });
  $(document).on("keyup", "#transform_translate_x", function() {
    p();
  });
  $(document).on("keyup", "#transform_translate_y", function() {
    p();
  });
  $(document).on("keyup", "#transform_skew_x", function() {
    p();
  });
  $(document).on("keyup", "#transform_skew_y", function() {
    p();
  });
  $(document).on("keyup", "#transform_rotate", function() {
    p();
  });
  $("#transition_field_" + $("#transition_transition_property").val()).show();
  $(document).on("change", "#transition_transition_property", function() {
    $("[id^=transition_field_]").hide();
    $("#transition_field_" + $(this).val()).show();
  });
  var y = !1;
  $(document).on("change", "#transition_height_timing", function() {
    h();
  });
  $(document).on("keyup", "#transition_height_height", function() {
    h();
  });
  $(document).on("keyup", "#transition_height_duration", function() {
    h();
  });
  $(document).on("keyup", "#transition_height_delay", function() {
    h();
  });
  $(document).on("change", "#transition_width_timing", function() {
    h();
  });
  $(document).on("keyup", "#transition_width_width", function() {
    h();
  });
  $(document).on("keyup", "#transition_width_duration", function() {
    h();
  });
  $(document).on("keyup", "#transition_width_delay", function() {
    h();
  });
  $(document).on("change", "#transition_bgcolor_timing", function() {
    h();
  });
  $(document).on("change", "#transition_bgcolor_color", function() {
    y = !0;
    h();
  });
  $(document).on("keyup", "#transition_bgcolor_duration", function() {
    h();
  });
  $(document).on("keyup", "#transition_bgcolor_delay", function() {
    h();
  });
  $(document).on("change", "#transition_opacity_timing", function() {
    h();
  });
  $(document).on("keyup", "#transition_opacity_opacity", function() {
    h();
  });
  $(document).on("keyup", "#transition_opacity_duration", function() {
    h();
  });
  $(document).on("keyup", "#transition_opacity_delay", function() {
    h();
  });
  $("#gradient_field_" + $("#gradient_style").val()).show();
  $(document).on("change", "#gradient_style", function() {
    $("[id^=gradient_field_]").hide();
    $("#gradient_field_" + $(this).val()).show();
    l();
  });
  "gradient" === section && l();
  $(document).on("change", "#gradient_start_color_linear", function() {
    l();
  });
  $(document).on("change", "#gradient_end_color_linear", function() {
    l();
  });
  $(document).on("mousemove", "#gradient_angle", function() {
    l();
  });
  $(document).on("change", "#gradient_start_color_radial", function() {
    l();
  });
  $(document).on("change", "#gradient_end_color_radial", function() {
    l();
  });
  $(document).on("mousemove", "#gradient_start_size", function() {
    l();
  });
  $(document).on("mousemove", "#gradient_end_size", function() {
    l();
  });
  "gradient collection" === section && ($(".gradient_card").each(function() {
    var b = $(this).attr("data-s-color");
    rgbcolor = z(b);
    rgb = [rgbcolor.r, rgbcolor.g, rgbcolor.b];
    1 === (125 < Math.round((299 * parseInt(rgb[0]) + 587 * parseInt(rgb[1]) + 114 * parseInt(rgb[2])) / 1000) ? 1 : 0) ? (console.log("black"), $(this).css({color:"rgba(0,0,0,0.87)"})) : (console.log("white"), $(this).css({color:"white"}));
    $(this).css({"background-color":$(this).attr("data-s-color"), background:"linear-gradient(to left, " + $(this).attr("data-s-color") + ", " + $(this).attr("data-e-color") + ")"});
  }), $(document).on("click", ".generate_button_gradient", function() {
    var b = $(this).parents(".gradient_card").attr("data-s-color"), a = $(this).parents(".gradient_card").attr("data-e-color");
    $("#generated_code_text").html("<code>background: " + b + ";</span></br><span>background: -webkit-linear-gradient(to left, " + b + ", " + a + ");</span></br><span>background: -moz-linear-gradient(to left, " + b + ", " + a + ");</span></br><span>background: -o-linear-gradient(to left, " + b + ", " + a + ");</span></br><span>background: linear-gradient(to left, " + b + ", " + a + ");</span></code>");
  }));
  $(document).on("click", "#gen_loremipsum", function() {
    var b = $("#num_of_paragraphs").val(), a = $("#len_of_paragraphs").val();
    $.ajax({type:"POST", url:base_url + "getwords", dataType:"json", success:function(d) {
      i = 0;
      for (output = "";i < b;) {
        var c = output, e = a, f = d;
        minlen = 50 == e ? 10 : e - 50;
        numwords = x(minlen, e);
        allwords = f.length - 1;
        paragraph = "";
        numsent = x(3, 7);
        for (j = 0;j < numsent;) {
          numwordssen = x(Math.floor(minlen / 3), Math.floor(numwords / 3));
          sentence = "";
          for (e = 0;e < numwordssen;e++) {
            sentence += f[x(0, allwords)].word + " ";
          }
          e = sentence;
          sentence = (e.charAt(0).toUpperCase() + e.slice(1)).trim() + ". ";
          paragraph += sentence;
          j++;
        }
        output = c + (paragraph + "\n\r");
        i++;
        console.log(output);
      }
      $("#output_loremipsum").val(output).focus();
    }});
  });
});